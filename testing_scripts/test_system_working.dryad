// test_system_working.dryad
// Versão funcional dos módulos do sistema

class Environment {
    public static fun get(name) {
        return native_env_get(name);
    }
    
    public static fun set(name, value) {
        return native_env_set(name, value);
    }
    
    public static fun exists(name) {
        return native_env_exists(name);
    }
    
    public static fun getAll() {
        return native_env_get_all();
    }
    
    public static fun remove(name) {
        return native_env_remove(name);
    }
}

class Process {
    public static fun execute(command) {
        return native_process_execute(command);
    }
    
    public static fun getCurrentPid() {
        return native_process_get_current_pid();
    }
    
    public static fun kill(pid) {
        return native_process_kill(pid);
    }
    
    public static fun isRunning(pid) {
        return native_process_is_running(pid);
    }
}

class Time {
    public static fun now() {
        return native_time_now();
    }
    
    public static fun nowMillis() {
        return native_time_now_millis();
    }
    
    public static fun sleep(seconds) {
        return native_time_sleep(seconds);
    }
    
    public static fun sleepMillis(milliseconds) {
        return native_time_sleep_millis(milliseconds);
    }
    
    public static fun format(timestamp, format) {
        return native_time_format(timestamp, format);
    }
}

class Platform {
    public static fun getOS() {
        return native_platform_get_os();
    }
    
    public static fun getArch() {
        return native_platform_get_arch();
    }
    
    public static fun getHostname() {
        return native_platform_get_hostname();
    }
    
    public static fun getCPUCores() {
        return native_platform_get_cpu_cores();
    }
    
    public static fun getTotalMemory() {
        return native_platform_get_total_memory();
    }
}

print("System modules defined successfully!");
print("Ready for use with static method calls:");
print("- Environment.get(name)");
print("- Process.execute(command)");
print("- Time.now()");
print("- Platform.getOS()");
