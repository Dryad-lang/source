// TESTE FINAL - DEMONSTRA√á√ÉO COMPLETA DO SISTEMA REFATORADO

Console.println("üéâ === DRYAD REFATORADO - DEMO COMPLETA === üéâ");

// 1. USANDO STATEMENTS (sem namespace!)
using io;
using math;
using core;

Console.println("\n‚úÖ 1. Imports funcionando (using io, math, core)");

// 2. CLASSES E M√âTODOS
class Pessoa {
    function __init__(nome, idade) {
        this.nome = nome;
        this.idade = idade;
    }
    
    function apresentar() {
        return "Ol√°, eu sou " + this.nome + " e tenho " + this.idade + " anos";
    }
    
    static function criarAdulto(nome) {
        return new Pessoa(nome, 18);
    }
}

let pessoa1 = new Pessoa("Ana", 25);
let pessoa2 = Pessoa.criarAdulto("Jo√£o");

Console.println("\n‚úÖ 2. Classes e m√©todos funcionando:");
Console.println(pessoa1.apresentar());
Console.println(pessoa2.apresentar());

// 3. FUN√á√ïES MATEM√ÅTICAS NATIVAS
Console.println("\n‚úÖ 3. Fun√ß√µes matem√°ticas nativas:");
Console.println("Math.abs(-100) = " + Math.abs(-100));
Console.println("Math.sqrt(144) = " + Math.sqrt(144));
Console.println("Math.pow(3, 4) = " + Math.pow(3, 4));

// 4. OPERA√á√ïES E VARI√ÅVEIS
let x = 15;
let y = 7;
let soma = x + y;
let produto = x * y;
let divisao = x / y;

Console.println("\n‚úÖ 4. Opera√ß√µes aritm√©ticas:");
Console.println(x + " + " + y + " = " + soma);
Console.println(x + " * " + y + " = " + produto);
Console.println(x + " / " + y + " = " + divisao);

// 5. ARRAYS E OBJETOS
let frutas = ["ma√ß√£", "banana", "laranja"];
let config = {
    nome: "Dryad",
    versao: "2.0",
    ativo: true
};

Console.println("\n‚úÖ 5. Arrays e objetos:");
Console.println("Frutas: " + frutas);
Console.println("Config: " + config);

// 6. CONTROLE DE FLUXO
Console.println("\n‚úÖ 6. Controle de fluxo:");
for (let i = 1; i <= 3; i = i + 1) {
    Console.println("Contagem: " + i);
}

if (soma > 20) {
    Console.println("A soma √© maior que 20!");
} else {
    Console.println("A soma √© menor ou igual a 20");
}

Console.println("\nüéä === REFATORA√á√ÉO COMPLETA E FUNCIONANDO! === üéä");
Console.println("‚úÖ Namespace removido");
Console.println("‚úÖ Using/Export implementados");
Console.println("‚úÖ Aliases para common libs");
Console.println("‚úÖ Native functions expandidas");
Console.println("‚úÖ Module loader integrado com Oak");
Console.println("‚úÖ Sistema de tipos melhorado");
Console.println("\nüöÄ Dryad est√° pronto para produ√ß√£o!");
