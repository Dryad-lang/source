// lib/core/types.dryad
// Módulo de inspeção e conversão de tipos para Dryad

namespace Core {
    export class Types {
        // Inspeção de tipos
        public static fun typeof(value) {
            return native_core_typeof(value);
        }
        
        public static fun isNumber(value) {
            return native_core_is_number(value);
        }
        
        public static fun isString(value) {
            return native_core_is_string(value);
        }
        
        public static fun isBool(value) {
            return native_core_is_bool(value);
        }
        
        public static fun isNull(value) {
            return native_core_is_null(value);
        }
        
        public static fun isFunction(value) {
            return native_core_is_function(value);
        }
        
        public static fun isClass(value) {
            return native_core_is_class(value);
        }
        
        public static fun isInstance(value) {
            return native_core_is_instance(value);
        }
        
        public static fun isException(value) {
            return native_core_is_exception(value);
        }
        
        // Conversões de tipos
        public static fun toString(value) {
            return native_core_to_string(value);
        }
        
        public static fun toNumber(value) {
            return native_core_to_number(value);
        }
        
        public static fun toBool(value) {
            return native_core_to_bool(value);
        }
        
        // Comparações avançadas
        public static fun equals(a, b) {
            return native_core_equals(a, b);
        }
        
        public static fun deepEquals(a, b) {
            return native_core_deep_equals(a, b);
        }
        
        // Validação específica para strings
        public static fun stringIsEmpty(value) {
            return native_core_string_is_empty(value);
        }
        
        // Validação geral
        public static fun isValid(value) {
            return native_core_is_valid(value);
        }
    }
}
