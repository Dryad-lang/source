// lib/core/meta.dryad
// Módulo de reflection e meta-programação para Dryad

namespace Core {
    export class Meta {
        // Informações de classe
        public static fun getClassName(obj) {
            return native_meta_get_class_name(obj);
        }
        
        public static fun getClassMethods(obj) {
            return native_meta_get_class_methods(obj);
        }
        
        public static fun getClassFields(obj) {
            return native_meta_get_class_fields(obj);
        }
        
        public static fun getClassStaticMethods(className) {
            return native_meta_get_class_static_methods(className);
        }
        
        // Verificação de existência
        public static fun hasMethod(obj, methodName) {
            return native_meta_has_method(obj, methodName);
        }
        
        public static fun hasField(obj, fieldName) {
            return native_meta_has_field(obj, fieldName);
        }
        
        public static fun hasStaticMethod(className, methodName) {
            return native_meta_has_static_method(className, methodName);
        }
        
        // Invocação dinâmica
        public static fun invokeMethod(obj, methodName, args) {
            return native_meta_invoke_method(obj, methodName, args);
        }
        
        public static fun invokeStaticMethod(className, methodName, args) {
            return native_meta_invoke_static_method(className, methodName, args);
        }
        
        // Acesso a campos
        public static fun getField(obj, fieldName) {
            return native_meta_get_field(obj, fieldName);
        }
        
        public static fun setField(obj, fieldName, value) {
            return native_meta_set_field(obj, fieldName, value);
        }
        
        // Informações de tipo
        public static fun getType(obj) {
            return native_meta_get_type(obj);
        }
        
        public static fun getTypeInfo(obj) {
            return native_meta_get_type_info(obj);
        }
        
        public static fun isInstanceOf(obj, className) {
            return native_meta_is_instance_of(obj, className);
        }
        
        // Avaliação dinâmica
        public static fun eval(code) {
            return native_meta_eval(code);
        }
        
        public static fun evalExpression(expression) {
            return native_meta_eval_expression(expression);
        }
        
        // Informações de função
        public static fun getFunctionName(func) {
            return native_meta_get_function_name(func);
        }
        
        public static fun getFunctionParameters(func) {
            return native_meta_get_function_parameters(func);
        }
        
        public static fun getFunctionArity(func) {
            return native_meta_get_function_arity(func);
        }
        
        // Criação dinâmica
        public static fun createInstance(className, args) {
            return native_meta_create_instance(className, args);
        }
        
        public static fun createClass(definition) {
            return native_meta_create_class(definition);
        }
        
        // Serialização e deserialização
        public static fun serialize(obj) {
            return native_meta_serialize(obj);
        }
        
        public static fun deserialize(data) {
            return native_meta_deserialize(data);
        }
        
        // Informações do ambiente
        public static fun getGlobalVariables() {
            return native_meta_get_global_variables();
        }
        
        public static fun getLoadedClasses() {
            return native_meta_get_loaded_classes();
        }
        
        public static fun getLoadedNamespaces() {
            return native_meta_get_loaded_namespaces();
        }
    }
}
