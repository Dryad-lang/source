// lib/system/process_no_namespace.dryad
// Módulo para execução de comandos externos e gerenciamento de processos (sem namespace)

class Process {
    // Executar um comando e retornar o resultado
    public static fun execute(command) {
        return native_process_execute(command);
    }
    
    // Executar comando com argumentos separados
    public static fun executeWithArgs(command, args) {
        return native_process_execute_with_args(command, args);
    }
    
    // Executar comando em background (assíncrono)
    public static fun executeAsync(command) {
        return native_process_execute_async(command);
    }
    
    // Obter PID do processo atual
    public static fun getCurrentPid() {
        return native_process_get_current_pid();
    }
    
    // Matar um processo por PID
    public static fun kill(pid) {
        return native_process_kill(pid);
    }
    
    // Verificar se um processo está rodando
    public static fun isRunning(pid) {
        return native_process_is_running(pid);
    }
    
    // Obter código de saída do último comando
    public static fun getExitCode() {
        return native_process_get_exit_code();
    }
    
    // Comandos específicos do sistema
    public static fun executeShell(command) {
        return native_process_execute_shell(command);
    }
    
    // Capturar saída padrão e erro
    public static fun executeWithOutput(command) {
        return native_process_execute_with_output(command);
    }
}
