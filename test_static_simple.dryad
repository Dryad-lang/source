// test_static_simple.dryad
// Simple test for static method functionality

// Test 1: Basic static method definition and calling
class Math {
    public static fun add(a, b) {
        return a + b;
    }
    
    public static fun multiply(a, b) {
        return a * b;
    }
    
    public static fun square(x) {
        return Math.multiply(x, x);
    }
}

// Test static method calls
let result1 = Math.add(5, 3);
print("Math.add(5, 3) = " + result1);

let result2 = Math.square(4);
print("Math.square(4) = " + result2);

// Test 3: Class with mixed static and instance methods
class Calculator {
    let value;
    
    public fun constructor(initialValue) {
        this.value = initialValue;
    }
    
    // Instance method
    public fun getValue() {
        return this.value;
    }
    
    // Instance method
    public fun add(x) {
        this.value = this.value + x;
        return this;
    }
    
    // Static method
    public static fun pi() {
        return 3.14159;
    }
    
    // Static method that calls another static method
    public static fun circleArea(radius) {
        return Calculator.pi() * radius * radius;
    }
}

// Test static method call on class
let piValue = Calculator.pi();
print("Calculator.pi() = " + piValue);

let area = Calculator.circleArea(5);
print("Calculator.circleArea(5) = " + area);

// Test instance method call
let calc = new Calculator(10);
print("calc.getValue() = " + calc.getValue());
calc.add(5);
print("After add(5): " + calc.getValue());

print("Static method tests completed successfully!");
