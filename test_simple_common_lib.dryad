// test_simple_common_lib.dryad
// Teste simples da common lib usando funções nativas diretamente

// Teste básico das funções nativas implementadas
let result1 = native_console_println("=== Teste Simples da Common Lib ===");

// Teste core.types
let num = 42;
let str = "hello";
let flag = true;

native_console_println("1. Testando core.Types:");
let type1 = native_core_typeof(num);
native_console_println("typeof(42):", type1);

let type2 = native_core_typeof(str);
native_console_println("typeof('hello'):", type2);

let isNum = native_core_is_number(num);
native_console_println("isNumber(42):", isNum);

let isStr = native_core_is_string(str);
native_console_println("isString('hello'):", isStr);

let strNum = native_core_to_string(num);
native_console_println("toString(42):", strNum);

let numStr = native_core_to_number("123");
native_console_println("toNumber('123'):", numStr);

// Teste IO.fs
native_console_println("");
native_console_println("2. Testando IO.FileSystem:");

let testFile = "temp_test.txt";
let testContent = "Conteúdo de teste";

let writeResult = native_fs_write_file(testFile, testContent);
native_console_println("writeFile result:", writeResult);

let fileExists = native_fs_file_exists(testFile);
native_console_println("fileExists:", fileExists);

let readContent = native_fs_read_file(testFile);
native_console_println("readFile content:", readContent);

let deleteResult = native_fs_delete_file(testFile);
native_console_println("deleteFile result:", deleteResult);

// Teste IO.buffer
native_console_println("");
native_console_println("3. Testando IO.Buffer:");

let buffer = native_buffer_create(100);
native_console_println("buffer created:", buffer);

let bufferLen = native_buffer_length(buffer);
native_console_println("buffer length:", bufferLen);

native_console_println("");
native_console_println("=== Teste Simples Finalizado ===");
