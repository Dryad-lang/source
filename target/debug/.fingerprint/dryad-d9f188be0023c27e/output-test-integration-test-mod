{"$message_type":"diagnostic","message":"unused imports: `BinaryOp` and `Expr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"tests\\critical.rs","byte_start":175,"byte_end":179,"line_start":6,"line_end":6,"column_start":32,"column_end":36,"is_primary":true,"text":[{"text":"use dryad::parser::ast::{Stmt, Expr, BinaryOp};","highlight_start":32,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests\\critical.rs","byte_start":181,"byte_end":189,"line_start":6,"line_end":6,"column_start":38,"column_end":46,"is_primary":true,"text":[{"text":"use dryad::parser::ast::{Stmt, Expr, BinaryOp};","highlight_start":38,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"tests\\critical.rs","byte_start":173,"byte_end":189,"line_start":6,"line_end":6,"column_start":30,"column_end":46,"is_primary":true,"text":[{"text":"use dryad::parser::ast::{Stmt, Expr, BinaryOp};","highlight_start":30,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"tests\\critical.rs","byte_start":168,"byte_end":169,"line_start":6,"line_end":6,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"use dryad::parser::ast::{Stmt, Expr, BinaryOp};","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"tests\\critical.rs","byte_start":189,"byte_end":190,"line_start":6,"line_end":6,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"use dryad::parser::ast::{Stmt, Expr, BinaryOp};","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `BinaryOp` and `Expr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\critical.rs:6:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse dryad::parser::ast::{Stmt, Expr, BinaryOp};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 1 warning emitted\u001b[0m\n\n"}
