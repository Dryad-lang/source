// lib/math/aritmetica.dryad
// Operações matemáticas básicas (usando native functions onde possível)

class Aritmetica {
    static function abs(x) {
        // Usar native function para performance
        return native_math_abs(x);
    }
    
    static function sqrt(x) {
        return native_math_sqrt(x);
    }
    
    static function pow(base, exponent) {
        return native_math_pow(base, exponent);
    }
    
    static function max(a, b) {
        if (a > b) {
            return a;
        }
        return b;
    }
    
    static function min(a, b) {
        if (a < b) {
            return a;
        }
        return b;
    }
    
    static function soma(a, b) {
        return a + b;
    }
    
    static function multiplicacao(a, b) {
        return a * b;
    }
    
    static function mdc(a, b) {
        // Algoritmo de Euclides simples
        a = Aritmetica.abs(a);
        b = Aritmetica.abs(b);
        
        while (b != 0) {
            let temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
    
    static function mmc(a, b) {
        return Aritmetica.abs(a * b) / Aritmetica.mdc(a, b);
    }
    
    static function fatorial(n) {
        if (n < 0) return 0;
        if (n == 0 || n == 1) return 1;
        
        let resultado = 1;
        let i = 2;
        while (i <= n) {
            resultado = resultado * i;
            i = i + 1;
        }
        return resultado;
    }
    
    static function random() {
        return native_math_random();
    }
    
    static function pi() {
        return native_math_pi();
    }
    
    static function e() {
        return native_math_e();
    }
}
